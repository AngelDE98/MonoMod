name: Build and Test
on:
  push:
  pull_request:
  
defaults:
  run:
    shell: pwsh

env:
  DOTNET_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  NUGET_PACKAGES: ${{github.workspace}}/artifacts/pkg
  
jobs:
  event_file:
    # This job uploads an event file so that our test aggregator and recorder can understand this event
    name: "Event File"
    runs-on: ubuntu-latest
    steps:
    - name: Upload
      uses: ./.github/actions/upload-event
  
  compute-version:
    name: Compute Version
    runs-on: ubuntu-latest
    outputs:
      ver: ${{ steps.computever.outputs.ver }}
    steps:
    - id: computever
      run: echo "ver=$(Get-Date -Format y.M.d).${{ github.run_number }}.${{ github.run_attempt }}" >> $env:GITHUB_OUTPUT
  
  build-testassets:
    needs: compute-version
    name: 'Build #${{needs.compute-version.outputs.ver}} (Linux)'
    runs-on: ubuntu-latest
    steps:
    - name: Build
      uses: ./.github/actions/do-build
      with:
        nuget-packages: ${{ env.NUGET_PACKAGES }}
        version-suffix: daily.${{needs.compute-version.outputs.ver}}
        upload-packages: true
        upload-tests: true

  build:
    strategy:
      matrix:
        os: [windows-latest, macos-13]
        include:
        - os: windows-latest
          name: Windows
        - os: macos-13
          name: MacOS
          
    name: 'Build #${{needs.compute-version.outputs.ver}} (${{matrix.name}})'
    runs-on: ${{ matrix.os }}
    steps:
    - name: Build
      uses: ./.github/actions/do-build
      with:
        nuget-packages: ${{ env.NUGET_PACKAGES }}
        version-suffix: daily.${{needs.compute-version.outputs.ver}}
        upload-packages: ${{ matrix.upload-packages }}
        upload-tests: ${{ matrix.upload-tests}}
        
  compute-test-matrix:
    name: Compute Test Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.compute-matrix.outputs.matrix }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        lfs: false
        submodules: false
    - name: Compute test matrix
      id: compute-matrix
      run: ./.github/gen-test-matrix.ps1 -MatrixOutName matrix -GithubOutput $env:GITHUB_OUTPUT
      
  test:
    needs: [compute-test-matrix, build-testassets]
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.compute-test-matrix.outputs.matrix) }}

    name: Test ${{ matrix.title }}
    runs-on: ${{ matrix.os.runner }}
    steps:
    - uses: ./.github/actions/run-sdk-test
      name: Run test suite
      if: ${{ ! matrix.dotnet.isMono }}
      with:
        nuget-packages: ${{ env.NUGET_PACKAGES }}
        needsRestore: ${{ matrix.dotnet.needsRestore }}
        arch: ${{ matrix.arch }}
        sdk: ${{ matrix.dotnet.sdk }}
        pgo: ${{ matrix.dotnet.pgo }}
        usePgo: ${{ matrix.usePgo }}
        tfm: ${{ matrix.dotnet.tfm }}
        title: ${{ matrix.title }}
        log-file-name: testresults.${{ matrix.os.runner }}.${{ matrix.dotnet.id != '' && matrix.dotnet.id || matrix.dotnet.sdk }}.${{ matrix.arch }}.trx
        
