name: do-build
description: ""

inputs:
  nuget-packages:
    description: env.NUGET_PACKAGES
    default: ${{ env.NUGET_PACKAGES }}
  do-not-add-suffix:
    description: ""
  version-suffix:
    description: VersionSuffix
  upload-packages:
    description: ""
    default: "false"
  upload-tests:
    description: ""
    default: "false"

runs:
  using: "composite"
  
  steps:
  - name: Checkout
    uses: actions/checkout@v4
    with:
      lfs: true
      submodules: recursive

  # TODO: maybe we can eventually use package locks for package caching?
  #- name: Install .NET SDK
  #  uses: actions/setup-dotnet@v4
  #  with:
  #    global-json-file: global.json

  - name: Install .NET SDK
    uses: nike4613/install-dotnet@54b402247e474b39b84891b9093d8025892c8b47
    with:
      global-json: global.json
      
  # NOTE: manual package caching
  - name: Cache restored NuGet packages
    uses: actions/cache@v4
    with:
      path: ${{ env.NUGET_PACKAGES }}
      key: ${{ runner.os }}-nuget-v1-${{ hashFiles('**/*.csproj', '**/*.props', '**/*.targets', 'nuget.config', 'global.json') }}
      restore-keys: ${{ runner.os }}-nuget-v1-
  - name: Restore
    shell: pwsh
    env:
      NUGET_PACKAGS: ${{ inputs.nuget-packages }}
      DOTNET_TELEMETRY_OPTOUT: 'true'
      DOTNET_NOLOGO: 'true'
      VersionSuffix: daily.${{inputs.version-suffix}}
      DoNotAddSuffix: ${{inputs.do-not-add-suffix}}
    run: dotnet restore -bl:restore.binlog -noAutoRsp

  - name: Build
    shell: pwsh
    env:
      NUGET_PACKAGS: ${{ inputs.nuget-packages }}
      DOTNET_TELEMETRY_OPTOUT: 'true'
      DOTNET_NOLOGO: 'true'
      VersionSuffix: daily.${{inputs.version-suffix}}
      DoNotAddSuffix: ${{inputs.do-not-add-suffix}}
    run: dotnet build --no-restore -c Release -p:ContinuousIntegrationBuild=true -bl:build.binlog -clp:NoSummary -noAutoRsp

  - name: Pack
    shell: pwsh
    env:
      NUGET_PACKAGS: ${{ inputs.nuget-packages }}
      DOTNET_TELEMETRY_OPTOUT: 'true'
      DOTNET_NOLOGO: 'true'
      VersionSuffix: daily.${{inputs.version-suffix}}
      DoNotAddSuffix: ${{inputs.do-not-add-suffix}}
    run: dotnet pack --no-restore -c Release -p:ContinuousIntegrationBuild=true -bl:pack.binlog -clp:NoSummary -noAutoRsp

    # TODO: it might be worth trying to do a "smoketest" test run with the installed tfm to broadly make sure that all builds
    #       work. We may also want to do a hash check on the packages, though I have no idea how reliable that would be.
    
  - name: Run auxiliary tests
    shell: pwsh
    env:
      NUGET_PACKAGS: ${{ inputs.nuget-packages }}
      DOTNET_TELEMETRY_OPTOUT: 'true'
      DOTNET_NOLOGO: 'true'
      VersionSuffix: daily.${{inputs.version-suffix}}
      DoNotAddSuffix: ${{inputs.do-not-add-suffix}}
      LOG_FILE_NAME: testresults.${{ runner.os }}.auxtests.trx
    run: dotnet test --no-build  -c Release -l:"trx;LogFileName=$($env:LOG_FILE_NAME)" -f "FullyQualifiedName!~MonoMod.UnitTest"

  - name: Upload test results
    uses: actions/upload-artifact@v4
    if: ${{ always() }}
    with:
      name: test-results aux ${{ runner.os }}
      retention-days: 1
      path: 'TestResults/*.trx'
      if-no-files-found: ignore

  - name: Upload binlogs
    uses: actions/upload-artifact@v4
    if: ${{ always() }}
    with:
      name: binlogs-${{ runner.os }}
      path: '*.binlog'
      retention-days: 7

  - name: Archive packages
    uses: actions/upload-artifact@v4
    if: ${{ inputs.upload-packages }}
    with:
      name: packages
      path: artifacts/package/release/*.nupkg

  - name: Upload test assets
    uses: actions/upload-artifact@v4
    if: ${{ inputs.upload-tests }}
    with:
      name: test-assets
      retention-days: 1
      path: |
        artifacts/bin/MonoMod.UnitTest/*/**/*